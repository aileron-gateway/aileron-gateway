syntax = "proto3";
package kernel;

import "buf/validate/validate.proto";

option go_package = "github.com/aileron-gateway/aileron-gateway/apis/kernel";

// Resource is the template of a resource definition.
// This messages is only used internally.
message Resource {
    // [REQUIRED]
    // APIVersion is the api version name.
    // For example, "core/v1" or "app/v1".
    string APIVersion = 1 [json_name = "apiVersion"];

    // [REQUIRED]
    // Kind is the API kind name.
    string Kind = 2 [json_name = "kind"];

    // [OPTIONAL]
    // Metadata is the resource metadata.
    Metadata Metadata = 3 [json_name = "metadata"];

    // [OPTIONAL]
    // Spec is the resource specification.
    // All resource dependent configurations go in the spec.
    ResourceSpec Spec = 4 [json_name = "spec"];
}

// ResourceSpec is the resource specification.
message ResourceSpec {}

// Metadata is the common metadata for all resources.
message Metadata {
    // [OPTIONAL]
    // Name is the resource name.
    // Name must be unique within the same resources in the same namespace.
    // If not set, default name named "default" is used.
    // Allowed characters are [0-9A-Za-z-.].
    string Name = 1 [json_name = "name", (buf.validate.field).string.pattern = "^[0-9A-Za-z-.]*$"];

    // [OPTIONAL]
    // Namespace is the namespace of the resource.
    // If not set, default namespace named "default" is used.
    // Allowed characters are [0-9A-Za-z-.].
    string Namespace = 2 [json_name = "namespace", (buf.validate.field).string.pattern = "^[0-9A-Za-z-.]*$"];

    // [OPTIONAL]
    // Logger is the logger name to use.
    // The format should be "<group>/<version>/<kind>/<namespace>/<name>"
    // for example "core/v1/SLogger/myNamespace/myName".
    // The named logger must be registered to the entrypoint resource.
    // "__default__" is the special name to refer to the default logger.
    // The default logger, which is globally unique, is used
    // if logger was not found by the specified name.
    // If not set, the globally unique default logger is used.
    // Logger for access logs, authentication or authorization logs, etc
    // should be configured under spec.
    string Logger = 3 [json_name = "logger"];

    // [OPTIONAL]
    // ErrorHandler is the error handler name to use.
    // The format should be "<group>/<version>/<kind>/<namespace>/<name>"
    // for example "core/v1/ErrorHandler/myNamespace/myName".
    // The named error handler must be registered to the entrypoint resource.
    // "__default__" is the special name to refer to the default error handler.
    // The default error handler, which is globally unique, is used
    // if error handler was not found by the specified name.
    // If not set, the globally unique default error handler is used.
    string ErrorHandler = 4 [json_name = "errorHandler"];
}

// Reference is the reference to a resource.
message Reference {
    // [REQUIRED]
    // APIVersion is the api version of the target resource.
    // For example, "core/v1" or "app/v1".
    // This field must not be empty.
    string APIVersion = 1 [json_name = "apiVersion", (buf.validate.field).string.pattern = "^[0-9A-Za-z]+/[0-9A-Za-z]+$"];

    // [REQUIRED]
    // Kind is the api kind of the target resource.
    // For example, "HTTPServer".
    // This field must not be empty.
    string Kind = 2 [json_name = "kind", (buf.validate.field).string.pattern = "^[0-9A-Za-z]+$"];

    // [OPTIONAL]
    // Name is the target instance name of the resource.
    // If not set, "default" is used.
    string Name = 3 [json_name = "name", (buf.validate.field).string.pattern = "^[0-9A-Za-z-.]*$"];

    // [OPTIONAL]
    // Namespace is the target instance namespace of the resource.
    // If not set, "default" is used.
    string Namespace = 4 [json_name = "namespace", (buf.validate.field).string.pattern = "^[0-9A-Za-z-.]*$"];
}

// Status is the resource status.
// DO NOT USE. This is left for compatibility.
message Status {}
