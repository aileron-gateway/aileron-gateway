syntax = "proto3";
package kernel;

import "buf/validate/validate.proto";

option go_package = "github.com/aileron-gateway/aileron-gateway/apis/kernel";

// SockOption is the options for networking sockets.
message SockOption {
    // [OPTIONAL]
    // SOOption is the socket options.
    // See https://man7.org/linux/man-pages/man7/socket.7.html
    SockSOOption SOOption = 1 [json_name = "soOption"];

    // [OPTIONAL]
    // IPOption is the ip socket options.
    // See https://man7.org/linux/man-pages/man7/ip.7.html
    SockIPOption IPOption = 2 [json_name = "ipOption"];

    // [OPTIONAL]
    // IPV6Option is the ipv6 socket options.
    // See https://man7.org/linux/man-pages/man7/ipv6.7.html
    SockIPV6Option IPV6Option = 3 [json_name = "ipv6Option"];

    // [OPTIONAL]
    // TCPOption is the TCP socket options.
    // See https://man7.org/linux/man-pages/man7/tcp.7.html
    SockTCPOption TCPOption = 4 [json_name = "tcpOption"];

    // [OPTIONAL]
    // UDPOption is the UDP socket options.
    // See https://man7.org/linux/man-pages/man7/udp.7.html
    SockUDPOption UDPOption = 5 [json_name = "udpOption"];
}

// SockSOOption is socket options for SOL_SOCKET level.
// See https://man7.org/linux/man-pages/man7/socket.7.html
message SockSOOption {
    // [OPTIONAL]
    // BindToDevice is the value of SO_BINDTODEVICE.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to empty string.
    // Default is not set.
    string BindToDevice = 1 [json_name = "bindToDevice"];

    // [OPTIONAL]
    // Debug is the value of SO_DEBUG.
    // See socket(7) of linux manual page for the details.
    // This socket option is defined in POSIX.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool Debug = 2 [json_name = "debug"];

    // [OPTIONAL]
    // KeepAlive is the value of SO_KEEPALIVE.
    // See socket(7) of linux manual page for the details.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool KeepAlive = 4 [json_name = "keepAlive"];

    // [OPTIONAL]
    // Linger is the value of SO_LINGER.
    // See socket(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 Linger = 5 [json_name = "linger"];

    // [OPTIONAL]
    // Mark is the value of SO_MARK.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 Mark = 6 [json_name = "mark"];

    // [OPTIONAL]
    // ReceiveBuffer is the value of SO_RCVBUF.
    // See socket(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 ReceiveBuffer = 7 [json_name = "receiveBuffer"];

    // [OPTIONAL]
    // ReceiveBufferForce is the value of SO_RCVBUFFORCE.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 ReceiveBufferForce = 8 [json_name = "receiveBufferForce"];

    // [OPTIONAL]
    // ReceiveTimeout is the value of SO_RCVTIMEO.
    // Value unit is millisecond.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // Operatin system's default will be used if the value is zero.
    // Default is not set.
    int32 ReceiveTimeout = 9 [json_name = "receiveTimeout"];

    // [OPTIONAL]
    // SendTimeout is the value of SO_SNDTIMEO.
    // Value unit is millisecond.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 SendTimeout = 10 [json_name = "sendTimeout"];

    // [OPTIONAL]
    // ReuseAddr is the value of SO_REUSEADDR.
    // See socket(7) of linux manual page for the details.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool ReuseAddr = 11 [json_name = "reuseAddr"];

    // [OPTIONAL]
    // ReusePort is the value of SO_REUSEPORT.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool ReusePort = 12 [json_name = "reusePort"];

    // [OPTIONAL]
    // SendBuffer is the value of SO_SNDBUF.
    // See socket(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 SendBuffer = 13 [json_name = "sendBuffer"];

    // [OPTIONAL]
    // SendBufferForce is the value of SO_SNDBUFFORCE.
    // See socket(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 SendBufferForce = 14 [json_name = "sendBufferForce"];
}

// SockIPOption is socket options for IPPROTO_IP level.
// See https://man7.org/linux/man-pages/man7/ip.7.html
message SockIPOption {
    // [OPTIONAL]
    // BindAddressNoPort is the value of IP_BIND_ADDRESS_NO_PORT.
    // See ip(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool BindAddressNoPort = 1 [json_name = "bindAddressNoPort"];

    // [OPTIONAL]
    // FreeBind is the value of IP_FREEBIND.
    // See ip(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool FreeBind = 2 [json_name = "freeBind"];

    // [OPTIONAL]
    // LocalPortRangeUpper is the upper port of IP_LOCAL_PORT_RANGE.
    // See ip(7) of linux manual page for the details.
    // This option works only for unix.
    // Operatin system's default will be used if the value is zero or negative.
    // Default is not set.
    int32 LocalPortRangeUpper = 3 [json_name = "localPortRangeUpper", (buf.validate.field).int32 = {gte : 0, lte : 65535}];

    // [OPTIONAL]
    // LocalPortRangeLower is the lower port of IP_LOCAL_PORT_RANGE.
    // See ip(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 LocalPortRangeLower = 4 [json_name = "localPortRangeLower", (buf.validate.field).int32 = {gte : 0, lte : 65535}];

    // [OPTIONAL]
    // Transparent is the value of IP_TRANSPARENT.
    // See ip(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool Transparent = 5 [json_name = "transparent"];

    // [OPTIONAL]
    // TTL is the value of IP_TTL.
    // See ip(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 TTL = 6 [json_name = "ttl"];
}

// SockIPV6Option is socket options for IPPROTO_IPV6 level.
// See https://man7.org/linux/man-pages/man7/ipv6.7.html
message SockIPV6Option {
}

// SockTCPOption is socket options for IPPROTO_TCP level.
// See https://man7.org/linux/man-pages/man7/tcp.7.html
message SockTCPOption {
    // [OPTIONAL]
    // CORK is the value of TCP_CORK.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool CORK = 1 [json_name = "cork"];

    // [OPTIONAL]
    // DeferAccept is the value of TCP_DEFER_ACCEPT.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 DeferAccept = 2 [json_name = "deferAccept"];

    // [OPTIONAL]
    // KeepCount is the value of TCP_KEEPCNT.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 KeepCount = 3 [json_name = "keepCount"];

    // [OPTIONAL]
    // KeepIdle is the value of TCP_KEEPIDLE.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 KeepIdle = 4 [json_name = "keepIdle"];

    // [OPTIONAL]
    // KeepInterval is the value of TCP_KEEPINTVL.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 KeepInterval = 5 [json_name = "keepInterval"];

    // [OPTIONAL]
    // Linger2 is the value of TCP_LINGER2.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 Linger2 = 6 [json_name = "linger2"];

    // [OPTIONAL]
    // MaxSegment is the value of TCP_MAXSEG.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 MaxSegment = 7 [json_name = "maxSegment"];

    // [OPTIONAL]
    // NoDelay is the value of TCP_NODELAY.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool NoDelay = 8 [json_name = "noDelay"];

    // [OPTIONAL]
    // QuickAck is the value of TCP_QUICKACK.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool QuickAck = 9 [json_name = "quickAck"];

    // [OPTIONAL]
    // SynCount is the value of TCP_SYNCNT.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 SynCount = 10 [json_name = "synCount"];

    // [OPTIONAL]
    // UserTimeout is the value of TCP_USER_TIMEOUT.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 UserTimeout = 11 [json_name = "userTimeout"];

    // [OPTIONAL]
    // WindowClamp is the value of TCP_FASTOPEN.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 WindowClamp = 12 [json_name = "windowClamp"];

    // [OPTIONAL]
    // FastOpen is the value of TCP_QUICKACK.
    // See tcp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool FastOpen = 13 [json_name = "fastOpen"];

    // [OPTIONAL]
    // FastOpenConnect is the value of TCP_FASTOPEN_CONNECT.
    // See tcp(7) of linux manual page for the details.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool FastOpenConnect = 14 [json_name = "fastOpenConnect"];
}

// SockUDPOption is socket options for IPPROTO_UDP level.
// See https://man7.org/linux/man-pages/man7/udp.7.html
message SockUDPOption {
    // [OPTIONAL]
    // CORK is the value of UDP_CORK.
    // See udp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool CORK = 1 [json_name = "cork"];

    // [OPTIONAL]
    // Sement is the upper port of UDP_SEGMENT.
    // See udp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is zero or negative.
    // Default is not set.
    int32 Segment = 2 [json_name = "segment"];

    // [OPTIONAL]
    // GRO is the value of UDP_GRO.
    // See udp(7) of linux manual page for the details.
    // This option works only for unix.
    // This field will be ignored if the value is not set or set to false.
    // Default is not set.
    bool GRO = 3 [json_name = "gro"];
}
