syntax = "proto3";
package kernel;

option go_package = "github.com/aileron-gateway/aileron-gateway/apis/kernel";

import "buf/validate/validate.proto";
import "kernel/hash.proto";

message PasswordCryptSpec {
    oneof PasswordCrypts {
        BCryptSpec BCrypt   = 1 [json_name = "bcrypt"];
        SCryptSpec SCrypt   = 2 [json_name = "scrypt"];
        PBKDF2Spec PBKDF2   = 3 [json_name = "pbkdf2"];
        Argon2Spec Argon2i  = 4 [json_name = "argon2i"];
        Argon2Spec Argon2id = 5 [json_name = "argon2id"];
    }
}

message BCryptSpec {
    // [OPTIONAL]
    // Cost is the cost of BCrypt hashing.
    // Cost is automatically limited to 4<=cost<=32.
    // Default value is used if not set or set to zero.
    // Default is [10].
    int32 Cost = 1 [json_name = "cost"];
}

message SCryptSpec {
    // [OPTIONAL]
    // SaltLen is the salt length in bytes.
    // Random bytes read by a random reader of crypt/rand is
    // used for generating a specified length of random salt.
    // Salts are appended to the resulting hash value.
    // Default value is used if not set or set to zero.
    // Default is [32].
    int32 SaltLen = 1 [json_name = "saltLen"];

    // [OPTIONAL]
    // N is the "N" parameter for SCrypt algorith.
    // Default value is used if not set or set to zero.
    // Default is [32768].
    int32 N = 2 [json_name = "n"];

    // [OPTIONAL]
    // R is the "r" parameter for SCrypt algorith.
    // Default value is used if not set or set to zero.
    // Default is [8].
    int32 R = 3 [json_name = "r"];

    // [OPTIONAL]
    // P is the "p" parameter for SCrypt algorith.
    // Default value is used if not set or set to zero.
    // Default is [1].
    int32 P = 4 [json_name = "p"];

    // [OPTIONAL]
    // KeyLen is the hashed key length.
    // Default value is used if not set or set to zero.
    // Default is [32].
    int32 KeyLen = 5 [json_name = "keyLen"];
}

message PBKDF2Spec {
    // [OPTIONAL]
    // SaltLen is the salt length in bytes.
    // Random bytes read by a random reader of crypt/rand is
    // used for generating a specified length of random salt.
    // Salts are appended to the resulting hash value.
    // Default value is used if not set or set to zero.
    // Default is [32].
    int32 SaltLen = 1 [json_name = "saltLen"];

    // [OPTIONAL]
    // Iter is the iteration count parameter for PBKDF2.
    // Default value is used if not set or set to zero.
    // Default is [4096].
    int32 Iter = 2 [json_name = "iter"];

    // [OPTIONAL]
    // KeyLen is the hashed key length.
    // Default value is used if not set or set to zero.
    // Default is [32].
    int32 KeyLen = 3 [json_name = "keyLen"];

    // Currently following algorithms are available.
    // SHA1, SHA224, SHA256, SHA384, SHA512, SHA512_224,
    // SHA512_256, SHA3_224, SHA3_256, SHA3_384, SHA3_512, MD5.
    HashAlg HashAlg = 4 [json_name = "hashAlg"];
}

message Argon2Spec {
    // [OPTIONAL]
    // SaltLen is the salt length in bytes.
    // Random bytes read by a random reader of crypt/rand is
    // used for generating a specified length of random salt.
    // Salts are appended to the resulting hash value.
    // Default value is used if not set or set to zero.
    // Default is [32].
    uint32 SaltLen = 1 [json_name = "saltLen"];

    // [OPTIONAL]
    // Time is the time parameter for Argon2i and Argon2id.
    // Default is [3] for Argon2i and [1] for Argon2id.
    uint32 Time = 2 [json_name = "time"];

    // [OPTIONAL]
    // Memory is the memory parameter for Argon2i and Argon2id.
    // Default value is used if not set or set to zero.
    // Default is [32*1024] for Argon2i and [64*1024] for Argon2id.
    uint32 Memory = 3 [json_name = "memory"];

    // [OPTIONAL]
    // Threads is the thread number to use for hash calculation.
    // Default value is used if not set or set to zero.
    // Default is [4].
    uint32 Threads = 4 [json_name = "threads", (buf.validate.field).uint32 = {lte : 255}];

    // [OPTIONAL]
    // KeyLen is the hashed key length.
    // Default value is used if not set or set to zero.
    // Default is [32].
    uint32 KeyLen = 5 [json_name = "keyLen"];
}
