syntax = "proto3";
package app.v1;

import "buf/validate/validate.proto";
import "core/v1/http.proto";
import "kernel/resource.proto";

option go_package = "github.com/aileron-gateway/aileron-gateway/apis/app/v1";

// EchoHandler is the definition of the EchoHandler object.
// EchoHandler implements interface of the HTTP handler.
message EchoHandler {
    // [REQUIRED]
    // APIVersion is the defined version of the handler.
    // This value must be "app/v1".
    string APIVersion = 1 [json_name = "apiVersion", (buf.validate.field).string.const = "app/v1"];

    // [REQUIRED]
    // Kind is the kind of this object.
    // This value must be "EchoHandler".
    string Kind = 2 [json_name = "kind", (buf.validate.field).string.const = "EchoHandler"];

    // [OPTIONAL]
    // Metadata is the metadata of the http logger object.
    // If not set, both name and namespace in the metadata
    // are treated as "default".
    kernel.Metadata Metadata = 3 [json_name = "metadata"];

    // [OPTIONAL]
    // Spec is the specification of the handler.
    // Default values are used when nothing is set.
    EchoHandlerSpec Spec = 4 [json_name = "spec"];
}

// EchoHandlerSpec is the specifications for the EchoHandler object.
message EchoHandlerSpec {
    // [OPTIONAL]
    // Patterns is path patterns that this handler
    // is registered to a server.
    // Default is not set, or empty string ["/"].
    repeated string Patterns = 1 [json_name = "patterns"];

    // [OPTIONA]
    // Methods is the list of HTTP method this handler can handle.
    // Note that it depends on the multiplexer, or HTTP router,
    // that the server uses if this field is used or not.
    // Default multiplexer does not use this field.
    // Default is not set.
    repeated core.v1.HTTPMethod Methods = 2 [json_name = "methods"];
}
