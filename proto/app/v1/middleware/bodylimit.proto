syntax = "proto3";
package app.v1;

import "buf/validate/validate.proto";
import "kernel/resource.proto";

option go_package = "github.com/aileron-gateway/aileron-gateway/apis/app/v1";

// BodyLimitMiddleware is the definition of the BodyLimitMiddleware object.
// BodyLimitMiddleware implements interface of the middleware.
// BodyLimitMiddleware limits the request or response body.
message BodyLimitMiddleware {
    // [REQUIRED]
    // APIVersion is the defined version of the midleware.
    // This value must be "app/v1".
    string APIVersion = 1 [json_name                         = "apiVersion",
                           (buf.validate.field).string.const = "app/v1"];

    // [REQUIRED]
    // Kind is the kind of this object.
    // This value must be "BodyLimitMiddleware".
    string Kind = 2 [json_name                         = "kind",
                     (buf.validate.field).string.const = "BodyLimitMiddleware"];

    // [OPTIONAL]
    // Metadata is the metadata of the http logger object.
    // If not set, both name and namespace in the metadata
    // are treated as "default".
    kernel.Metadata Metadata = 3 [json_name = "metadata"];

    // [OPTIONAL]
    // Spec is the specification of the middleware.
    // Default values are used when nothing is set.
    BodyLimitMiddlewareSpec Spec = 4 [json_name = "spec"];
}

// BodyLimitMiddlewareSpec is the specifications for the BodyLimitMiddleware object.
message BodyLimitMiddlewareSpec {
    // [OPTIONAL]
    // ErrorHandler is the reference to a ErrorHandler object.
    // Referred object must implement ErrorHandler interface.
    // Default error handler is used when not set.
    kernel.Reference ErrorHandler = 1 [json_name = "errorHandler"];

    // [OPTIONAL]
    // MaxSize is the maximum body size to allow.
    // Both Content-Length header values and actual body size
    // calculated by loading the bodies are used to
    // determine allow or not.
    // When requests have obviously larger body than MaxSize,
    // those sizes are known by their Content-Length headers,
    // they don't pass this middleware and RequestEntityTooLarge errors
    // are returned to clients.
    // If requests have Content-Length header which sizes are smaller than
    // MaxSize, bodies are load on memory or temp file and
    // actual body sizes are checked.
    // Use MemLimit and TempPath to set memory limits
    // and temporary file path to check the actual body sizes.
    // If zero, default value is used.
    // If negative, actual body sized are not checked for all requests
    // which means the same as disabling this middleware.
    // Default is [4194304], or 4 MiB.
    int64 MaxSize = 2 [json_name = "maxSize"];

    // [OPTIONAL]
    // MemLimit is the memory limit to oad request bodies to
    // check their actual body size.
    // If a request has Content-Length less than MaxSize and
    // less than MemLimit, its body is loaded on memory
    // up to Content-Length bytes to check actual body size.
    // This value is per request limit and not the total limit.
    // If not set or zero, the value of MaxSize is used.
    // To disable loading on memory and always use temporary file,
    // set MemLimit to negative value.
    // Default is the value of MaxSize.
    int64 MemLimit = 3 [json_name = "memLimit"];

    // [OPTIONAL]
    // TempPath is the temporary file path used for checking
    // actual body sizes.
    // If a request has Content-Length less than MaxSize and grater than
    // memLimit, its body is loaded into a newly created temporary file under TempPath.
    // Temp files are removed after finished proceeding requests.
    // Make sure there is enough space in the tempPath to save request bodies.
    // Default is the system's temp path loaded from environment.
    string TempPath = 4 [json_name = "tempPath"];
}
