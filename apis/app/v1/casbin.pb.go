// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: app/v1/authz/casbin.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kernel "github.com/aileron-gateway/aileron-gateway/apis/kernel"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CasbinAuthzMiddlewareis the definition of the CasbinAuthzMiddlewareobject.
// CasbinAuthzMiddlewareimplements interface of the authorization handler.
// See the https://casbin.org/ for about casbin.
type CasbinAuthzMiddleware struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [REQUIRED]
	// APIVersion is the defined version of the authorization handler.
	// This value must be "app/v1".
	APIVersion string `protobuf:"bytes,1,opt,name=APIVersion,json=apiVersion,proto3" json:"APIVersion,omitempty"`
	// [REQUIRED]
	// Kind is the kind of this object.
	// This value must be "CasbinAuthzMiddleware".
	Kind string `protobuf:"bytes,2,opt,name=Kind,json=kind,proto3" json:"Kind,omitempty"`
	// [OPTIONAL]
	// Metadata is the metadata of the http logger object.
	// If not set, both name and namespace in the metadata
	// are treated as "default".
	Metadata *kernel.Metadata `protobuf:"bytes,3,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	// [OPTIONAL]
	// Spec is the specification of the authorization handler.
	// Default values are used when nothing is set.
	Spec          *CasbinAuthzMiddlewareSpec `protobuf:"bytes,4,opt,name=Spec,json=spec,proto3" json:"Spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CasbinAuthzMiddleware) Reset() {
	*x = CasbinAuthzMiddleware{}
	mi := &file_app_v1_authz_casbin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CasbinAuthzMiddleware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinAuthzMiddleware) ProtoMessage() {}

func (x *CasbinAuthzMiddleware) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_authz_casbin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinAuthzMiddleware.ProtoReflect.Descriptor instead.
func (*CasbinAuthzMiddleware) Descriptor() ([]byte, []int) {
	return file_app_v1_authz_casbin_proto_rawDescGZIP(), []int{0}
}

func (x *CasbinAuthzMiddleware) GetAPIVersion() string {
	if x != nil {
		return x.APIVersion
	}
	return ""
}

func (x *CasbinAuthzMiddleware) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CasbinAuthzMiddleware) GetMetadata() *kernel.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CasbinAuthzMiddleware) GetSpec() *CasbinAuthzMiddlewareSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// CasbinAuthzMiddlewareSpec is the specifications of the CasbinAuthzMiddlewareobject.
type CasbinAuthzMiddlewareSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [OPTIONAL]
	// Logger is the reference to a Logger object.
	// Referred object must implement Logger interface.
	// Default Logger is used when not set.
	Logger *kernel.Reference `protobuf:"bytes,1,opt,name=Logger,json=logger,proto3" json:"Logger,omitempty"`
	// [OPTIONAL]
	// ErrorHandler is the reference to a ErrorHandler object.
	// Referred object must implement ErrorHandler interface.
	// Default error handler is used when not set.
	ErrorHandler *kernel.Reference `protobuf:"bytes,2,opt,name=ErrorHandler,json=errorHandler,proto3" json:"ErrorHandler,omitempty"`
	// [OPTIONAL]
	// ClaimsKey is the key to get claims to be used for authorization.
	// This value should be matched to the one which is set in the authentication handler
	// when using this authorization handler with any authentication handler.
	// Found values are accessible from policy through "Auth".
	// Default is ["AuthnClaims"].
	ClaimsKey string `protobuf:"bytes,3,opt,name=ClaimsKey,json=claimsKey,proto3" json:"ClaimsKey,omitempty"`
	// [OPTIONAL]
	// ExtraKeys is the key list to extra information from the request context
	// and pass it it to the casbin input.
	// If not set, request_definition in the casbin model will like be `r = sub, obj, act`.
	// If some keys set, request_definition in the casbin model will like be `r = sub, obj, act, ext1, ext2`.
	// Default is not set.
	ExtraKeys []string `protobuf:"bytes,4,rep,name=ExtraKeys,json=extraKeys,proto3" json:"ExtraKeys,omitempty"`
	// [OPTIONAL]
	// Explain explains the reason of the result of authorization.
	// Explain logs are output as-is even the logger is json-based structural logger.
	// That means the explain logs are output with any log level.
	// Explain should be disabled in production environment for performance.
	// Default [false].
	Explain bool `protobuf:"varint,5,opt,name=Explain,json=explain,proto3" json:"Explain,omitempty"`
	// [OPTIONAL]
	// Enforcers is the list of casbin enforcers.
	// This is optional but should be set at least one enforcer to make authorization work.
	// Default is not set.
	Enforcers     []*EnforcerSpec `protobuf:"bytes,6,rep,name=Enforcers,json=enforcers,proto3" json:"Enforcers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CasbinAuthzMiddlewareSpec) Reset() {
	*x = CasbinAuthzMiddlewareSpec{}
	mi := &file_app_v1_authz_casbin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CasbinAuthzMiddlewareSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinAuthzMiddlewareSpec) ProtoMessage() {}

func (x *CasbinAuthzMiddlewareSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_authz_casbin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinAuthzMiddlewareSpec.ProtoReflect.Descriptor instead.
func (*CasbinAuthzMiddlewareSpec) Descriptor() ([]byte, []int) {
	return file_app_v1_authz_casbin_proto_rawDescGZIP(), []int{1}
}

func (x *CasbinAuthzMiddlewareSpec) GetLogger() *kernel.Reference {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *CasbinAuthzMiddlewareSpec) GetErrorHandler() *kernel.Reference {
	if x != nil {
		return x.ErrorHandler
	}
	return nil
}

func (x *CasbinAuthzMiddlewareSpec) GetClaimsKey() string {
	if x != nil {
		return x.ClaimsKey
	}
	return ""
}

func (x *CasbinAuthzMiddlewareSpec) GetExtraKeys() []string {
	if x != nil {
		return x.ExtraKeys
	}
	return nil
}

func (x *CasbinAuthzMiddlewareSpec) GetExplain() bool {
	if x != nil {
		return x.Explain
	}
	return false
}

func (x *CasbinAuthzMiddlewareSpec) GetEnforcers() []*EnforcerSpec {
	if x != nil {
		return x.Enforcers
	}
	return nil
}

// EnforcerSpec is the specification of a casbin enforcer.
// See the casbin's official documents for more details at https://casbin.org/docs/enforcers/
type EnforcerSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [REQUIRED]
	// ModelPath is the path to the casbin model.
	// If the path starts with "http://" or "https://",
	// models are requested to the specified endpoint with a GET request.
	// Model should be returned in the response body with 200 OK status.
	// If the path does not starts with "http://" or "https://",
	// the path is considered to be a file path in local file system.
	// RoundTripper and Header fields can be used for configureing HTTP client
	// when getting model data from an HTTP endpoint.
	// See https://casbin.org/docs/model-storage and https://casbin.org/docs/supported-models.
	// Default is not set.
	ModelPath string `protobuf:"bytes,1,opt,name=ModelPath,json=modelPath,proto3" json:"ModelPath,omitempty"`
	// [OPTIONAL]
	// Cron is the schedule to reload all policies.
	// If not set, policies are not reloaded.
	// Note that only policies are reloaded and model is not.
	// Format should be "second minute hour day month week"
	// or "minute hour day month week".
	// TZ must be a valid timezone name.
	// Value ranges are `0-59` for second, `0-59` for minute,
	// `0-23` for hour, `1-31` for day of month,
	// `1-12 or JAN-DEC` for month, `0-6 or SUN-SAT` for day of week.
	// Special caharacters `* / , -` are allowed for all fields.
	// Timezone can be specified like "TZ=UTC * * * * *".
	// For example, "0 * * * *" means hourly rotation,
	// "0 0 * * *" means daily rotation.
	// Multiple jobs won't be run at the same time.
	// Default is not set.
	Cron string `protobuf:"bytes,2,opt,name=Cron,json=cron,proto3" json:"Cron,omitempty"`
	// [OPTIONAL]
	// RoundTripper is the references to a roundTripper object.
	// Referred object must implement RoundTripper interface.
	// This round tripper is used by the policy adapters which
	// fetch policies from external URLs.
	// Use Header field to add custom HTTP headers to the requests.
	// Default is not set.
	RoundTripper *kernel.Reference `protobuf:"bytes,3,opt,name=RoundTripper,json=roundTripper,proto3" json:"RoundTripper,omitempty"`
	// [OPTIONAL]
	// Header is the HTTP header name and value list.
	// Specified headers are added to the HTTP requests
	// when getting model and policies from HTTP endpoints.
	// This is mainly intended for adding Authorization header.
	// Default is not set.
	Header map[string]string `protobuf:"bytes,4,rep,name=Header,json=header,proto3" json:"Header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Types that are valid to be assigned to Policies:
	//
	//	*EnforcerSpec_PolicyPath
	//	*EnforcerSpec_PolicyURL
	//	*EnforcerSpec_ExternalAdapter
	Policies      isEnforcerSpec_Policies `protobuf_oneof:"Policies"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnforcerSpec) Reset() {
	*x = EnforcerSpec{}
	mi := &file_app_v1_authz_casbin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnforcerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnforcerSpec) ProtoMessage() {}

func (x *EnforcerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_authz_casbin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnforcerSpec.ProtoReflect.Descriptor instead.
func (*EnforcerSpec) Descriptor() ([]byte, []int) {
	return file_app_v1_authz_casbin_proto_rawDescGZIP(), []int{2}
}

func (x *EnforcerSpec) GetModelPath() string {
	if x != nil {
		return x.ModelPath
	}
	return ""
}

func (x *EnforcerSpec) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *EnforcerSpec) GetRoundTripper() *kernel.Reference {
	if x != nil {
		return x.RoundTripper
	}
	return nil
}

func (x *EnforcerSpec) GetHeader() map[string]string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EnforcerSpec) GetPolicies() isEnforcerSpec_Policies {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *EnforcerSpec) GetPolicyPath() string {
	if x != nil {
		if x, ok := x.Policies.(*EnforcerSpec_PolicyPath); ok {
			return x.PolicyPath
		}
	}
	return ""
}

func (x *EnforcerSpec) GetPolicyURL() string {
	if x != nil {
		if x, ok := x.Policies.(*EnforcerSpec_PolicyURL); ok {
			return x.PolicyURL
		}
	}
	return ""
}

func (x *EnforcerSpec) GetExternalAdapter() *kernel.Reference {
	if x != nil {
		if x, ok := x.Policies.(*EnforcerSpec_ExternalAdapter); ok {
			return x.ExternalAdapter
		}
	}
	return nil
}

type isEnforcerSpec_Policies interface {
	isEnforcerSpec_Policies()
}

type EnforcerSpec_PolicyPath struct {
	// [OPTIONAL]
	// PolicyPath is the file path to the casbin policy file.
	// See https://casbin.org/docs/policy-storage and https://casbin.org/docs/supported-models.
	// File extension must be one of ".csv", ".json", ".xml", ".yaml", ".yml".
	// Note that the all policies are loaded on the memory.
	// Default is not set.
	PolicyPath string `protobuf:"bytes,10,opt,name=PolicyPath,json=policyPath,proto3,oneof"`
}

type EnforcerSpec_PolicyURL struct {
	// [OPTIONAL]
	// PolicyURL is the http URL to get a policy.
	// See https://casbin.org/docs/policy-storage and https://casbin.org/docs/supported-models.
	// Response status code must be 200 OK.
	// Response content-type must be "application/" or "text/"
	// + one of "csv", "json", "xml", "yaml", "yml".
	// Note that the all policies, or the response body, are loaded on the memory.
	// Default is not set.
	PolicyURL string `protobuf:"bytes,11,opt,name=PolicyURL,json=policyURL,proto3,oneof"`
}

type EnforcerSpec_ExternalAdapter struct {
	// [OPTIONAL]
	// ExternalAdapter is the reference to a Casbin adapter object.
	// The object must implements persist.Adapter interface.
	// Because policies are not changed in the application,
	// implementing LoadPolicy method is enought.
	// https://pkg.go.dev/github.com/casbin/casbin/v3/persist#Adapter
	// Default is not set.
	ExternalAdapter *kernel.Reference `protobuf:"bytes,12,opt,name=ExternalAdapter,json=externalAdapter,proto3,oneof"`
}

func (*EnforcerSpec_PolicyPath) isEnforcerSpec_Policies() {}

func (*EnforcerSpec_PolicyURL) isEnforcerSpec_Policies() {}

func (*EnforcerSpec_ExternalAdapter) isEnforcerSpec_Policies() {}

var File_app_v1_authz_casbin_proto protoreflect.FileDescriptor

var file_app_v1_authz_casbin_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x63,
	0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x72, 0x08, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x2f, 0x76, 0x31, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c,
	0xba, 0x48, 0x19, 0x72, 0x17, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x7a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x35, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x41, 0x75,
	0x74, 0x68, 0x7a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xa1, 0x02, 0x0a, 0x19, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x29, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x35, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x48, 0x15, 0x72,
	0x13, 0x32, 0x11, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x2d, 0x5f,
	0x2e, 0x5d, 0x2b, 0x24, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x09, 0x45, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x09, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72, 0x73, 0x22, 0x82, 0x03, 0x0a, 0x0c,
	0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x09,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x72, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x72, 0x69, 0x70, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0c, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x70, 0x70, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x09, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x3d, 0x0a, 0x0f, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_app_v1_authz_casbin_proto_rawDescOnce sync.Once
	file_app_v1_authz_casbin_proto_rawDescData []byte
)

func file_app_v1_authz_casbin_proto_rawDescGZIP() []byte {
	file_app_v1_authz_casbin_proto_rawDescOnce.Do(func() {
		file_app_v1_authz_casbin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_v1_authz_casbin_proto_rawDesc), len(file_app_v1_authz_casbin_proto_rawDesc)))
	})
	return file_app_v1_authz_casbin_proto_rawDescData
}

var file_app_v1_authz_casbin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_app_v1_authz_casbin_proto_goTypes = []any{
	(*CasbinAuthzMiddleware)(nil),     // 0: app.v1.CasbinAuthzMiddleware
	(*CasbinAuthzMiddlewareSpec)(nil), // 1: app.v1.CasbinAuthzMiddlewareSpec
	(*EnforcerSpec)(nil),              // 2: app.v1.EnforcerSpec
	nil,                               // 3: app.v1.EnforcerSpec.HeaderEntry
	(*kernel.Metadata)(nil),           // 4: kernel.Metadata
	(*kernel.Reference)(nil),          // 5: kernel.Reference
}
var file_app_v1_authz_casbin_proto_depIdxs = []int32{
	4, // 0: app.v1.CasbinAuthzMiddleware.Metadata:type_name -> kernel.Metadata
	1, // 1: app.v1.CasbinAuthzMiddleware.Spec:type_name -> app.v1.CasbinAuthzMiddlewareSpec
	5, // 2: app.v1.CasbinAuthzMiddlewareSpec.Logger:type_name -> kernel.Reference
	5, // 3: app.v1.CasbinAuthzMiddlewareSpec.ErrorHandler:type_name -> kernel.Reference
	2, // 4: app.v1.CasbinAuthzMiddlewareSpec.Enforcers:type_name -> app.v1.EnforcerSpec
	5, // 5: app.v1.EnforcerSpec.RoundTripper:type_name -> kernel.Reference
	3, // 6: app.v1.EnforcerSpec.Header:type_name -> app.v1.EnforcerSpec.HeaderEntry
	5, // 7: app.v1.EnforcerSpec.ExternalAdapter:type_name -> kernel.Reference
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_app_v1_authz_casbin_proto_init() }
func file_app_v1_authz_casbin_proto_init() {
	if File_app_v1_authz_casbin_proto != nil {
		return
	}
	file_app_v1_authz_casbin_proto_msgTypes[2].OneofWrappers = []any{
		(*EnforcerSpec_PolicyPath)(nil),
		(*EnforcerSpec_PolicyURL)(nil),
		(*EnforcerSpec_ExternalAdapter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_v1_authz_casbin_proto_rawDesc), len(file_app_v1_authz_casbin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_v1_authz_casbin_proto_goTypes,
		DependencyIndexes: file_app_v1_authz_casbin_proto_depIdxs,
		MessageInfos:      file_app_v1_authz_casbin_proto_msgTypes,
	}.Build()
	File_app_v1_authz_casbin_proto = out.File
	file_app_v1_authz_casbin_proto_goTypes = nil
	file_app_v1_authz_casbin_proto_depIdxs = nil
}
