// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.0
// source: app/v1/middleware/compression.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kernel "github.com/aileron-gateway/aileron-gateway/apis/kernel"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CompressionMiddleware is the definition of the CompressionMiddleware object.
// CompressionMiddleware implements interface of the middleware.
type CompressionMiddleware struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [REQUIRED]
	// APIVersion is the defined version of the midleware.
	// This value must be "app/v1".
	APIVersion string `protobuf:"bytes,1,opt,name=APIVersion,json=apiVersion,proto3" json:"APIVersion,omitempty"`
	// [REQUIRED]
	// Kind is the kind of this object.
	// This value must be "CompressionMiddleware".
	Kind string `protobuf:"bytes,2,opt,name=Kind,json=kind,proto3" json:"Kind,omitempty"`
	// [OPTIONAL]
	// Metadata is the metadata of the http logger object.
	// If not set, both name and namespace in the metadata
	// are treated as "default".
	Metadata *kernel.Metadata `protobuf:"bytes,3,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	// [OPTIONAL]
	// Spec is the specification of the middleware.
	// Default values are used when nothing is set.
	Spec          *CompressionMiddlewareSpec `protobuf:"bytes,4,opt,name=Spec,json=spec,proto3" json:"Spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompressionMiddleware) Reset() {
	*x = CompressionMiddleware{}
	mi := &file_app_v1_middleware_compression_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompressionMiddleware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressionMiddleware) ProtoMessage() {}

func (x *CompressionMiddleware) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_middleware_compression_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressionMiddleware.ProtoReflect.Descriptor instead.
func (*CompressionMiddleware) Descriptor() ([]byte, []int) {
	return file_app_v1_middleware_compression_proto_rawDescGZIP(), []int{0}
}

func (x *CompressionMiddleware) GetAPIVersion() string {
	if x != nil {
		return x.APIVersion
	}
	return ""
}

func (x *CompressionMiddleware) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CompressionMiddleware) GetMetadata() *kernel.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CompressionMiddleware) GetSpec() *CompressionMiddlewareSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// CompressionMiddlewareSpec is the specifications for the CompressionMiddleware object.
type CompressionMiddlewareSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [OPTIONAL]
	// GzipLevel is the gzip compression level.
	// BestSpeed=1, BestCompression=9. Default level is 6.
	GzipLevel int32 `protobuf:"varint,1,opt,name=GzipLevel,json=gzipLevel,proto3" json:"GzipLevel,omitempty"`
	// [OPTIONAL]
	// BrotliLevel is the brotli compression level.
	// BestSpeed=0, BestCompression=11. Default level is 4.
	// Note that set this field to -1 to use BestSpeed=0 level instead of setting 0 because of the technical issue.
	BrotliLevel int32 `protobuf:"varint,2,opt,name=BrotliLevel,json=brotliLevel,proto3" json:"BrotliLevel,omitempty"`
	// [OPTIONAL]
	// TargetMIMEs is the list of mime types to compress.
	// Response bodies are compressed if its MIME type is contained in this list.
	// Default values are set when not set
	// ["application/json", "application/manifest+json", "application/graphql+json",
	// "text/html", "text/richtext", "text/plain", "text/css",
	// "text/xml", "application/xml", "application/xhtml+xml", "image/svg+xml",
	// "application/javascript", "text/javascript", "text/js"]
	TargetMIMEs []string `protobuf:"bytes,3,rep,name=TargetMIMEs,json=targetMIMEs,proto3" json:"TargetMIMEs,omitempty"`
	// [OPTIONAL]
	// MinimumSize is the minimum response body size to be compressed in bytes.
	// The value should typically be 100~1kB.
	// Default value will be used when set to 0.
	// Set negative value to compress all.
	// Default is [1024].
	MinimumSize   int32 `protobuf:"varint,4,opt,name=MinimumSize,json=minimumSize,proto3" json:"MinimumSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompressionMiddlewareSpec) Reset() {
	*x = CompressionMiddlewareSpec{}
	mi := &file_app_v1_middleware_compression_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompressionMiddlewareSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressionMiddlewareSpec) ProtoMessage() {}

func (x *CompressionMiddlewareSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_middleware_compression_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressionMiddlewareSpec.ProtoReflect.Descriptor instead.
func (*CompressionMiddlewareSpec) Descriptor() ([]byte, []int) {
	return file_app_v1_middleware_compression_proto_rawDescGZIP(), []int{1}
}

func (x *CompressionMiddlewareSpec) GetGzipLevel() int32 {
	if x != nil {
		return x.GzipLevel
	}
	return 0
}

func (x *CompressionMiddlewareSpec) GetBrotliLevel() int32 {
	if x != nil {
		return x.BrotliLevel
	}
	return 0
}

func (x *CompressionMiddlewareSpec) GetTargetMIMEs() []string {
	if x != nil {
		return x.TargetMIMEs
	}
	return nil
}

func (x *CompressionMiddlewareSpec) GetMinimumSize() int32 {
	if x != nil {
		return x.MinimumSize
	}
	return 0
}

var File_app_v1_middleware_compression_proto protoreflect.FileDescriptor

var file_app_v1_middleware_compression_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62,
	0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x41,
	0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xba, 0x48, 0x0a, 0x72, 0x08, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xba, 0x48, 0x19, 0x72, 0x17, 0x0a,
	0x15, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x08,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04, 0x53, 0x70,
	0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x64,
	0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x22, 0xbe, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x27, 0x0a, 0x09, 0x47, 0x7a, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x09, 0xba, 0x48, 0x06, 0x1a, 0x04, 0x18, 0x09, 0x28, 0x01, 0x52, 0x09, 0x67,
	0x7a, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x34, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x74,
	0x6c, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xba,
	0x48, 0x0f, 0x1a, 0x0d, 0x18, 0x0b, 0x28, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x74, 0x6c, 0x69, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x49, 0x4d, 0x45, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x49, 0x4d, 0x45, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x69,
	0x7a, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_v1_middleware_compression_proto_rawDescOnce sync.Once
	file_app_v1_middleware_compression_proto_rawDescData = file_app_v1_middleware_compression_proto_rawDesc
)

func file_app_v1_middleware_compression_proto_rawDescGZIP() []byte {
	file_app_v1_middleware_compression_proto_rawDescOnce.Do(func() {
		file_app_v1_middleware_compression_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_v1_middleware_compression_proto_rawDescData)
	})
	return file_app_v1_middleware_compression_proto_rawDescData
}

var file_app_v1_middleware_compression_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_app_v1_middleware_compression_proto_goTypes = []any{
	(*CompressionMiddleware)(nil),     // 0: app.v1.CompressionMiddleware
	(*CompressionMiddlewareSpec)(nil), // 1: app.v1.CompressionMiddlewareSpec
	(*kernel.Metadata)(nil),           // 2: kernel.Metadata
}
var file_app_v1_middleware_compression_proto_depIdxs = []int32{
	2, // 0: app.v1.CompressionMiddleware.Metadata:type_name -> kernel.Metadata
	1, // 1: app.v1.CompressionMiddleware.Spec:type_name -> app.v1.CompressionMiddlewareSpec
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_app_v1_middleware_compression_proto_init() }
func file_app_v1_middleware_compression_proto_init() {
	if File_app_v1_middleware_compression_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_v1_middleware_compression_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_v1_middleware_compression_proto_goTypes,
		DependencyIndexes: file_app_v1_middleware_compression_proto_depIdxs,
		MessageInfos:      file_app_v1_middleware_compression_proto_msgTypes,
	}.Build()
	File_app_v1_middleware_compression_proto = out.File
	file_app_v1_middleware_compression_proto_rawDesc = nil
	file_app_v1_middleware_compression_proto_goTypes = nil
	file_app_v1_middleware_compression_proto_depIdxs = nil
}
