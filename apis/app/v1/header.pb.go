// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.0
// source: app/v1/middleware/header.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kernel "github.com/aileron-gateway/aileron-gateway/apis/kernel"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HeaderPolicyMiddleware resource definition.
// apiVersion="app/v1", kind="HeaderPolicyMiddleware".
type HeaderPolicyMiddleware struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	APIVersion    string                      `protobuf:"bytes,1,opt,name=APIVersion,json=apiVersion,proto3" json:"APIVersion,omitempty"`
	Kind          string                      `protobuf:"bytes,2,opt,name=Kind,json=kind,proto3" json:"Kind,omitempty"`
	Metadata      *kernel.Metadata            `protobuf:"bytes,3,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	Spec          *HeaderPolicyMiddlewareSpec `protobuf:"bytes,4,opt,name=Spec,json=spec,proto3" json:"Spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderPolicyMiddleware) Reset() {
	*x = HeaderPolicyMiddleware{}
	mi := &file_app_v1_middleware_header_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderPolicyMiddleware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderPolicyMiddleware) ProtoMessage() {}

func (x *HeaderPolicyMiddleware) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_middleware_header_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderPolicyMiddleware.ProtoReflect.Descriptor instead.
func (*HeaderPolicyMiddleware) Descriptor() ([]byte, []int) {
	return file_app_v1_middleware_header_proto_rawDescGZIP(), []int{0}
}

func (x *HeaderPolicyMiddleware) GetAPIVersion() string {
	if x != nil {
		return x.APIVersion
	}
	return ""
}

func (x *HeaderPolicyMiddleware) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *HeaderPolicyMiddleware) GetMetadata() *kernel.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *HeaderPolicyMiddleware) GetSpec() *HeaderPolicyMiddlewareSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// HeaderPolicyMiddlewareSpec is the specifications for the HeaderPolicyMiddleware object.
type HeaderPolicyMiddlewareSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [OPTIONAL]
	// ErrorHandler is the reference to a ErrorHandler object.
	// Referred object must implement ErrorHandler interface.
	// Default error handler is used when not set.
	ErrorHandler *kernel.Reference `protobuf:"bytes,1,opt,name=ErrorHandler,json=errorHandler,proto3" json:"ErrorHandler,omitempty"`
	// [OPTIONAL]
	// AllowMIMEs are the list of MIME types to allow.
	// See https://www.iana.org/assignments/media-types/media-types.xhtml for all mime types.
	// This field is ignored when nothing is specified.
	AllowMIMEs []string `protobuf:"bytes,2,rep,name=AllowMIMEs,json=allowMIMEs,proto3" json:"AllowMIMEs,omitempty"`
	// [OPTIONAL]
	// MaxContentLength is the maximum content-length of the requests to allow.
	// All requests including unknown-length requests are allowed
	// when the value is less than or equal to 0.
	// Default is 0.
	MaxContentLength int64 `protobuf:"varint,3,opt,name=MaxContentLength,json=maxContentLength,proto3" json:"MaxContentLength,omitempty"`
	// [OPTIONAL]
	// RequestPolicy is the header policy imposed to the request headers.
	// Default is not set.
	RequestPolicy *HeaderPolicySpec `protobuf:"bytes,4,opt,name=RequestPolicy,json=requestPolicy,proto3" json:"RequestPolicy,omitempty"`
	// [OPTIONAL]
	// RequestPolicy is the header policy imposed to the response headers.
	// Default is not set.
	ResponsePolicy *HeaderPolicySpec `protobuf:"bytes,5,opt,name=ResponsePolicy,json=responsePolicy,proto3" json:"ResponsePolicy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HeaderPolicyMiddlewareSpec) Reset() {
	*x = HeaderPolicyMiddlewareSpec{}
	mi := &file_app_v1_middleware_header_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderPolicyMiddlewareSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderPolicyMiddlewareSpec) ProtoMessage() {}

func (x *HeaderPolicyMiddlewareSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_middleware_header_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderPolicyMiddlewareSpec.ProtoReflect.Descriptor instead.
func (*HeaderPolicyMiddlewareSpec) Descriptor() ([]byte, []int) {
	return file_app_v1_middleware_header_proto_rawDescGZIP(), []int{1}
}

func (x *HeaderPolicyMiddlewareSpec) GetErrorHandler() *kernel.Reference {
	if x != nil {
		return x.ErrorHandler
	}
	return nil
}

func (x *HeaderPolicyMiddlewareSpec) GetAllowMIMEs() []string {
	if x != nil {
		return x.AllowMIMEs
	}
	return nil
}

func (x *HeaderPolicyMiddlewareSpec) GetMaxContentLength() int64 {
	if x != nil {
		return x.MaxContentLength
	}
	return 0
}

func (x *HeaderPolicyMiddlewareSpec) GetRequestPolicy() *HeaderPolicySpec {
	if x != nil {
		return x.RequestPolicy
	}
	return nil
}

func (x *HeaderPolicyMiddlewareSpec) GetResponsePolicy() *HeaderPolicySpec {
	if x != nil {
		return x.ResponsePolicy
	}
	return nil
}

// HeaderPolicySpec is the specifications of header policy.
type HeaderPolicySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [OPTIONAL]
	// Allows is the list of HTTP header names to allow to pass.
	// This list works as a whitelist and other HTTP headers are removed.
	// When no values are set, this field is ignored.
	Allows []string `protobuf:"bytes,1,rep,name=Allows,json=allows,proto3" json:"Allows,omitempty"`
	// [OPTIONAL]
	// Removes is the list of HTTP header names to remove.
	// This list works as a blacklist and the listed HTTP headers are removed.
	// When no values are set, this field is ignored.
	Removes []string `protobuf:"bytes,2,rep,name=Removes,json=removes,proto3" json:"Removes,omitempty"`
	// [OPTIONAL]
	// Add is the list of HTTP header names and values to add.
	// The listed values are added to the header.
	// All existing values are kept in the header if any.
	// Default is not set.
	Add map[string]string `protobuf:"bytes,3,rep,name=Add,json=add,proto3" json:"Add,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [OPTIONAL]
	// Set is the list of HTTP header names and values to set.
	// The listed values are set to the header.
	// All existing values are removed if any.
	// Default is not set.
	Set map[string]string `protobuf:"bytes,4,rep,name=Set,json=set,proto3" json:"Set,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// [OPTIONAL]
	// Rewrites is the list of HTTP header rewrite rules.
	// Header values, if exists, are rewritten by the
	// specified rewrite rules.
	// Default is not set.
	Rewrites      []*HeaderRewriteSpec `protobuf:"bytes,5,rep,name=Rewrites,json=rewrites,proto3" json:"Rewrites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderPolicySpec) Reset() {
	*x = HeaderPolicySpec{}
	mi := &file_app_v1_middleware_header_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderPolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderPolicySpec) ProtoMessage() {}

func (x *HeaderPolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_middleware_header_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderPolicySpec.ProtoReflect.Descriptor instead.
func (*HeaderPolicySpec) Descriptor() ([]byte, []int) {
	return file_app_v1_middleware_header_proto_rawDescGZIP(), []int{2}
}

func (x *HeaderPolicySpec) GetAllows() []string {
	if x != nil {
		return x.Allows
	}
	return nil
}

func (x *HeaderPolicySpec) GetRemoves() []string {
	if x != nil {
		return x.Removes
	}
	return nil
}

func (x *HeaderPolicySpec) GetAdd() map[string]string {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *HeaderPolicySpec) GetSet() map[string]string {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *HeaderPolicySpec) GetRewrites() []*HeaderRewriteSpec {
	if x != nil {
		return x.Rewrites
	}
	return nil
}

// HeaderRewriteSpec is the configuration for rewriting HTTP headers.
type HeaderRewriteSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// [REQUIRED]
	// Name is the target header name.
	// Wildcards such as "*" cannot be used.
	// Default is not set.
	Name string `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	// [REQUIRED]
	// Replacer is the value replace rule.
	// Default is not set.
	Replacer      *kernel.ReplacerSpec `protobuf:"bytes,2,opt,name=Replacer,json=replacer,proto3" json:"Replacer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderRewriteSpec) Reset() {
	*x = HeaderRewriteSpec{}
	mi := &file_app_v1_middleware_header_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderRewriteSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderRewriteSpec) ProtoMessage() {}

func (x *HeaderRewriteSpec) ProtoReflect() protoreflect.Message {
	mi := &file_app_v1_middleware_header_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderRewriteSpec.ProtoReflect.Descriptor instead.
func (*HeaderRewriteSpec) Descriptor() ([]byte, []int) {
	return file_app_v1_middleware_header_proto_rawDescGZIP(), []int{3}
}

func (x *HeaderRewriteSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeaderRewriteSpec) GetReplacer() *kernel.ReplacerSpec {
	if x != nil {
		return x.Replacer
	}
	return nil
}

var File_app_v1_middleware_header_proto protoreflect.FileDescriptor

var file_app_v1_middleware_header_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x36, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0xa1, 0x02, 0x0a, 0x1a, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x35, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x49, 0x4d, 0x45, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x49, 0x4d, 0x45, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3e, 0x0a, 0x0d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x9f, 0x03, 0x0a,
	0x10, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x25, 0x0a, 0x06, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x01,
	0x52, 0x06, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x0a, 0x92, 0x01,
	0x07, 0x22, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x01, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x73, 0x12, 0x49, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x14, 0xba, 0x48, 0x11, 0x9a, 0x01, 0x0e, 0x22, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x01,
	0x2a, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x02, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x49, 0x0a, 0x03,
	0x53, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x14, 0xba, 0x48,
	0x11, 0x9a, 0x01, 0x0e, 0x22, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x01, 0x2a, 0x05, 0x72, 0x03, 0xc0,
	0x01, 0x02, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x52, 0x65, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x73, 0x1a, 0x36,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x36, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63,
	0x0a, 0x11, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xc0, 0x01, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x72, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x6f, 0x6e, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_app_v1_middleware_header_proto_rawDescOnce sync.Once
	file_app_v1_middleware_header_proto_rawDescData []byte
)

func file_app_v1_middleware_header_proto_rawDescGZIP() []byte {
	file_app_v1_middleware_header_proto_rawDescOnce.Do(func() {
		file_app_v1_middleware_header_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_v1_middleware_header_proto_rawDesc), len(file_app_v1_middleware_header_proto_rawDesc)))
	})
	return file_app_v1_middleware_header_proto_rawDescData
}

var file_app_v1_middleware_header_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_app_v1_middleware_header_proto_goTypes = []any{
	(*HeaderPolicyMiddleware)(nil),     // 0: app.v1.HeaderPolicyMiddleware
	(*HeaderPolicyMiddlewareSpec)(nil), // 1: app.v1.HeaderPolicyMiddlewareSpec
	(*HeaderPolicySpec)(nil),           // 2: app.v1.HeaderPolicySpec
	(*HeaderRewriteSpec)(nil),          // 3: app.v1.HeaderRewriteSpec
	nil,                                // 4: app.v1.HeaderPolicySpec.AddEntry
	nil,                                // 5: app.v1.HeaderPolicySpec.SetEntry
	(*kernel.Metadata)(nil),            // 6: kernel.Metadata
	(*kernel.Reference)(nil),           // 7: kernel.Reference
	(*kernel.ReplacerSpec)(nil),        // 8: kernel.ReplacerSpec
}
var file_app_v1_middleware_header_proto_depIdxs = []int32{
	6, // 0: app.v1.HeaderPolicyMiddleware.Metadata:type_name -> kernel.Metadata
	1, // 1: app.v1.HeaderPolicyMiddleware.Spec:type_name -> app.v1.HeaderPolicyMiddlewareSpec
	7, // 2: app.v1.HeaderPolicyMiddlewareSpec.ErrorHandler:type_name -> kernel.Reference
	2, // 3: app.v1.HeaderPolicyMiddlewareSpec.RequestPolicy:type_name -> app.v1.HeaderPolicySpec
	2, // 4: app.v1.HeaderPolicyMiddlewareSpec.ResponsePolicy:type_name -> app.v1.HeaderPolicySpec
	4, // 5: app.v1.HeaderPolicySpec.Add:type_name -> app.v1.HeaderPolicySpec.AddEntry
	5, // 6: app.v1.HeaderPolicySpec.Set:type_name -> app.v1.HeaderPolicySpec.SetEntry
	3, // 7: app.v1.HeaderPolicySpec.Rewrites:type_name -> app.v1.HeaderRewriteSpec
	8, // 8: app.v1.HeaderRewriteSpec.Replacer:type_name -> kernel.ReplacerSpec
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_app_v1_middleware_header_proto_init() }
func file_app_v1_middleware_header_proto_init() {
	if File_app_v1_middleware_header_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_v1_middleware_header_proto_rawDesc), len(file_app_v1_middleware_header_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_v1_middleware_header_proto_goTypes,
		DependencyIndexes: file_app_v1_middleware_header_proto_depIdxs,
		MessageInfos:      file_app_v1_middleware_header_proto_msgTypes,
	}.Build()
	File_app_v1_middleware_header_proto = out.File
	file_app_v1_middleware_header_proto_goTypes = nil
	file_app_v1_middleware_header_proto_depIdxs = nil
}
