name: Unit Test

on:
  workflow_dispatch: {}
  workflow_call: {}

jobs:
  test-stable:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu
          # - windows
          - macos
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: make test
        run: |
          set +o pipefail
          make test
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./_output/coverage.out
          fail_ci_if_error: true
          verbose: true
          env_vars: ${{ matrix.os }}
          name: ${{ matrix.os }}
          flags: unit
      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-${{ matrix.os }}
          path: |
            _output/**
            api.html
          retention-days: 7

  test-oldstable:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu
          # - windows
          - macos
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-go@v5
        with:
          go-version: oldstable
      - name: make test
        run: |
          set +o pipefail
          make test
      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-${{ matrix.os }}
          path: |
            _output/**
            api.html
          retention-days: 7

  test-minimum:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu
          # - windows
          - macos
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"
      - name: make test
        run: |
          set +o pipefail
          make test
      - uses: actions/upload-artifact@v4
        with:
          name: unit-test-${{ matrix.os }}
          path: |
            _output/**
            api.html
          retention-days: 7

  qemu:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        arch:
          - "amd64"
          - "arm"
          - "arm64"
          - "ppc64"
          - "ppc64le"
          - "riscv64"
          - "s390x"
          - "loong64" # Can be removed.
          - "386" # Can be removed.
          - "mips" # Can be removed.
          - "mips64" # Can be removed.
          - "mips64le" # Can be removed.
          - "mipsle" # Can be removed.
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - run: |
          sudo apt-get -y update
          sudo apt-get -y install qemu-user
      - name: make test
        run: |
          make go-test-qemu GOARCH=${{ matrix.arch }}	GO_TEST_TARGET=./cmd/...
          make go-test-qemu GOARCH=${{ matrix.arch }} GO_TEST_TARGET=./kernel/...
          make go-test-qemu GOARCH=${{ matrix.arch }} GO_TEST_TARGET=./core/...
          make go-test-qemu GOARCH=${{ matrix.arch }} GO_TEST_TARGET=./app/...
