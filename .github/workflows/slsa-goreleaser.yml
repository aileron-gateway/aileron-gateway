name: Binary Release
# References
# https://github.com/slsa-framework/slsa-github-generator
# https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/go/README.md

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-test.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  args:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - id: version
        run: echo "version=$(git describe --tags --always --dirty | sed 's/-dirty//')" >> "$GITHUB_OUTPUT"

  build:
    needs: args
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.1.0
    strategy:
      matrix:
        include:
          - {os: "darwin", arch: "amd64"}
          - {os: "darwin", arch: "arm64"}
          - {os: "freebsd", arch: "386"}
          - {os: "freebsd", arch: "amd64"}
          - {os: "freebsd", arch: "arm7"}
          - {os: "freebsd", arch: "arm64"}
          - {os: "linux", arch: "386"}
          - {os: "linux", arch: "amd64"}
          - {os: "linux", arch: "arm7"}
          - {os: "linux", arch: "arm64"}
          - {os: "linux", arch: "ppc64"}
          - {os: "linux", arch: "ppc64le"}
          - {os: "linux", arch: "riscv64"}
          - {os: "linux", arch: "s390x"}
          - {os: "netbsd", arch: "386"}
          - {os: "netbsd", arch: "amd64"}
          - {os: "netbsd", arch: "arm7"}
          - {os: "netbsd", arch: "arm64"}
          - {os: "openbsd", arch: "386"}
          - {os: "openbsd", arch: "amd64"}
          - {os: "openbsd", arch: "arm7"}
          - {os: "openbsd", arch: "arm64"}
          - {os: "windows", arch: "386"}
          - {os: "windows", arch: "amd64"}
          - {os: "windows", arch: "arm7"}
          - {os: "windows", arch: "arm64"}
    with:
      # Check available go version at the link below.
      # https://github.com/actions/go-versions/blob/main/versions-manifest.json
      go-version: stable
      config-file: .github/targets/${{matrix.os}}-${{matrix.arch}}.yaml
      evaluated-envs: "VERSION:${{needs.args.outputs.version}}"
      draft-release: true
      upload-assets: true
      upload-tag-name: "${{needs.args.outputs.version}}"

  nfpm:
    needs: [build, args]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - run: ls -la
      - run: |
          echo 'deb [trusted=yes] https://repo.fury.io/goreleaser/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt-get update
          sudo apt-get install -y nfpm
          export VERSION="${{needs.args.outputs.version}}"
          make nfpm-rpm NFPM_RPM_ARCH="386 amd64 arm7 arm64 ppc64le riscv64 s390x"
          make nfpm-deb NFPM_RPM_ARCH="386 amd64 arm7 arm64 ppc64le riscv64 s390x"
          make nfpm-apk NFPM_RPM_ARCH="386 amd64 arm7 arm64 ppc64le riscv64 s390x"
          make nfpm-archlinux NFPM_RPM_ARCH="386 amd64 arm7 arm64 ppc64le riscv64 s390x"
          ls -la ./_output/pkg/
      - run: |
          cd ./_output/pkg/
          ls -la
          sha256sum aileron* >> ./SHA256SUMS
          sha1sum aileron* >> ./SHA1SUMS
          md5sum aileron* >> ./MD5SUMS
      - uses: softprops/action-gh-release@v2
        with:
          files: ./_output/pkg/*
          draft: true
